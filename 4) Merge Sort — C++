// file: merge_sort.cpp
#include <iostream>
#include <vector>

using namespace std;

vector<int> mergeVec(const vector<int>& left, const vector<int>& right) {
    vector<int> result;
    int i = 0, j = 0;
    while (i < (int)left.size() && j < (int)right.size()) {
        if (left[i] < right[j]) result.push_back(left[i++]);
        else result.push_back(right[j++]);
    }
    while (i < (int)left.size()) result.push_back(left[i++]);
    while (j < (int)right.size()) result.push_back(right[j++]);
    return result;
}

vector<int> mergeSort(const vector<int>& arr) {
    if (arr.size() <= 1) return arr;
    int mid = arr.size() / 2;
    vector<int> left(arr.begin(), arr.begin() + mid);
    vector<int> right(arr.begin() + mid, arr.end());
    left = mergeSort(left);
    right = mergeSort(right);
    return mergeVec(left, right);
}

int main() {
    vector<int> a = {38, 27, 43, 3, 9, 82, 10};
    cout << "Исходный массив: ";
    for (int x : a) cout << x << " ";
    cout << endl;

    vector<int> sorted = mergeSort(a);

    cout << "Отсортированный массив: ";
    for (int x : sorted) cout << x << " ";
    cout << endl;
    return 0;
}
